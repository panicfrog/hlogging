[Error]
enum WriteFileError {
  "FileError", "WriteError",
};

[Enum]
interface Metadata {
    String(string value);
    Array(sequence<Metadata> value);
    Map(record<DOMString, Metadata> value);
};

enum LoggingLevel {
    "Debug", "Info", "Notice", "Warning", "Error", "Critical",
};

[Enum]
interface HLoggingType {
    StdStream();
    FileLogger(string directory);
    MmapLogger(string directory);
};



namespace hlogging {
    [Throws=WriteFileError]
    undefined write_file(string filename, string message);
    undefined configure(string label, LoggingLevel level, HLoggingType logger_type);
    undefined debug(Metadata metadata, string message, string? source);
    undefined info(Metadata metadata, string message, string? source);
    undefined notice(Metadata metadata, string message, string? source);
    undefined warring(Metadata metadata, string message, string? source);
    undefined error(Metadata metadata, string message, string? source);
    undefined critical(Metadata metadata, string message, string? source);
};
